name: CI/CD Workflow

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Docker to build and run the application
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify installation

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t my_app .

      # Run tests using your existing runtest.sh script
      - name: Run Newman tests and send email report
        run: |
          chmod +x ./runtest.sh  
          ./runtest.sh           

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Deploy the application using Docker Compose
      - name: Deploy the application
        run: |
          docker-compose up -d

  notify:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      # Send success email notification
      - name: Send success email
        run: |
          echo "Pipeline Passed" | mail -s "CI/CD Pipeline Status" taskeen.zehra@emumba.com

  notify_failure:
    runs-on: ubuntu-latest
    needs: build
    if: failure()
    steps:
      # Send failure email notification
      - name: Send failure email
        run: |
          echo "Pipeline Failed" | mail -s "CI/CD Pipeline Status" taskeen.zehra@emumba.com

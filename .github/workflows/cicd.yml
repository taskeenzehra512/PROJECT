name: CI/CD Pipeline

on:
  push:
    branches:
      - master    # Trigger the pipeline on push to the main branch
  
jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          sudo apt-get remove --purge -y containerd containerd.io
          sudo apt-get autoremove --purge -y
          curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo apt-get update
          sudo apt-get install -y docker.io
          if ! command -v docker-compose &> /dev/null
          then
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          else
            echo "docker-compose is already installed"
          fi
          sudo npm install -g newman
          pip install -r requirements.txt

      - name: Verify docker-compose installation
        run: |
          sudo /usr/local/bin/docker-compose --version

      - name: Deploy the app with Docker Compose
        run: |
          sudo /usr/local/bin/docker-compose up --build -d

      # Run the runtest.sh script to execute Newman and send the report
      - name: Run tests and send report
        run: |
          chmod +x runtest.sh   # Make sure the script is executable
          ./runtest.sh          # Run the script

  deploy:
    needs: build_and_test  # Only deploy if build_and_test is successful
    runs-on: ubuntu-latest

    steps:
    # Checkout code again to deploy
    - name: Checkout code
      uses: actions/checkout@v3

    # Install Docker Compose if not available
    - name: Install Docker Compose
      run: |
        if ! command -v docker-compose &> /dev/null
        then
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
        else
          echo "docker-compose is already installed"
        fi

    # Verify Docker Compose installation
    - name: Verify Docker Compose
      run: docker-compose --version

    # Set up Docker and deploy the application
    - name: Deploy the app
      run: |
        sudo docker-compose up --build -d

  notify:
   needs: deploy  # Only notify if deployment is successful
   runs-on: ubuntu-latest

   steps:
    # Install mailutils
    - name: Install mailutils
      run: sudo apt-get update && sudo apt-get install -y mailutils

    # Send an email if the pipeline is successful
    - name: Send email on success
      run: |
        echo "The CI/CD pipeline has passed successfully!" | mail -s "CI/CD Pipeline Success" taskeen.zehra@emumba.com

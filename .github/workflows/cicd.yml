name: CI/CD Pipeline

on:
  push:
    branches:
      - master    # Trigger the pipeline on push to the main branch
  pull_request:
    branches:
      - master    # Trigger the pipeline on pull requests targeting the main branch

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python for running tests (Newman) and sending reports
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Use the appropriate Python version

      # Install dependencies
      - name: Install dependencies
        run: |
             # Clean up Docker packages if necessary
          sudo apt-get remove --purge containerd containerd.io
          sudo apt-get autoremove --purge

          # Install Node.js (16.x)
          curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
          sudo apt-get install -y nodejs

          # Install Docker
          sudo apt-get install -y docker.io

          # Install Newman globally using npm
          sudo npm install -g newman

          # Install Python dependencies
          pip install -r requirements.txt
      # Run the runtest.sh script to execute Newman and send the report
      - name: Run tests and send report
        run: |
          chmod +x runtest.sh   # Make sure the script is executable
          ./runtest.sh          # Run the script

  deploy:
    needs: build_and_test  # Only deploy if build_and_test is successful
    runs-on: ubuntu-latest

    steps:
      # Checkout code again to deploy
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker and deploy the application
      - name: Deploy the app
        run: |
          docker-compose up -d  # Start the Docker container in detached mode

  notify:
    needs: deploy  # Only notify if deployment is successful
    runs-on: ubuntu-latest

    steps:
      # Send an email if the pipeline is successful
      - name: Send email on success
        run: |
          echo "The CI/CD pipeline has passed successfully!" | mail -s "CI/CD Pipeline Success" taskeen.zehra@emumba@example.com
